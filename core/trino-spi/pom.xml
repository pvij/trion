<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.trion</groupId>
        <artifactId>trion-root</artifactId>
        <version>1</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>trino-spi</artifactId>
    <description>Trino - Service Provider Interface (SPI)</description>

    <properties>
        <released-artifacts.dir>${project.build.directory}/released-artifacts</released-artifacts.dir>
<!--        <trino.check.skip-revapi>false</trino.check.skip-revapi>-->
    </properties>

    <!-- the SPI should have only minimal dependencies -->
    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>json</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>junit-extensions</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-testing-services</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>io/trino/spi/trino-spi-version.txt</include>
                </includes>
            </resource>

            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>io/trino/spi/trino-spi-version.txt</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.revapi</groupId>-->
<!--                <artifactId>revapi-maven-plugin</artifactId>-->
<!--                <version>0.15.0</version>-->
<!--                <configuration>-->
<!--                    <skip>${trino.check.skip-revapi}</skip>-->
<!--                    <ignoreSuggestionsFormat>xml</ignoreSuggestionsFormat>-->
<!--                    <analysisConfiguration>-->
<!--                        <revapi.filter>-->
<!--                            <elements>-->
<!--                                <exclude>-->
<!--                                    <item>-->
<!--                                        <matcher>java</matcher>-->
<!--                                        <match>@io.trino.spi.Experimental(*) ^*;</match>-->
<!--                                    </item>-->
<!--                                </exclude>-->
<!--                            </elements>-->
<!--                        </revapi.filter>-->
<!--                        <revapi.differences>-->
<!--                            <ignore>true</ignore>-->
<!--                            <differences>-->
<!--                                &lt;!&ndash; Allow adding new annotations (such as @Nullable) &ndash;&gt;-->
<!--                                <item>-->
<!--                                    <code>java.annotation.added</code>-->
<!--                                </item>-->
<!--                                &lt;!&ndash; Allow changing enum constant order (e.g., StandardErrorCode) &ndash;&gt;-->
<!--                                <item>-->
<!--                                    <code>java.field.enumConstantOrderChanged</code>-->
<!--                                </item>-->
<!--                                &lt;!&ndash; Allow arbitrary changes to unstable APIs &ndash;&gt;-->
<!--                                <item>-->
<!--                                    <regex>true</regex>-->
<!--                                    <code>java.method.numberOfParametersChanged</code>-->
<!--                                    <old>-->
<!--                                        <matcher>java</matcher>-->
<!--                                        <match>@io.trino.spi.Unstable *;</match>-->
<!--                                    </old>-->
<!--                                </item>-->
<!--                                &lt;!&ndash; Allow removing things that were previously deprecated &ndash;&gt;-->
<!--                                <item>-->
<!--                                    <regex>true</regex>-->
<!--                                    <code>java\.(class|method|field)\.removed</code>-->
<!--                                    <old>-->
<!--                                        <matcher>java</matcher>-->
<!--                                        <match>@java.lang.Deprecated(*) ^*;</match>-->
<!--                                    </old>-->
<!--                                </item>-->
<!--                                &lt;!&ndash; Backwards incompatible changes since the previous release &ndash;&gt;-->
<!--                                &lt;!&ndash; Any exclusions below can be deleted after each release &ndash;&gt;-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.annotation.attributeValueChanged</code>-->
<!--                                    <old>interface io.trino.spi.predicate.ValueSet</old>-->
<!--                                    <new>interface io.trino.spi.predicate.ValueSet</new>-->
<!--                                    <annotationType>com.fasterxml.jackson.annotation.JsonSubTypes</annotationType>-->
<!--                                    <attribute>value</attribute>-->
<!--                                    <oldValue>{@com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.EquatableValueSet.class, name = "equatable"), @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.SortedRangeSet.class, name = "sortable"), @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.AllOrNoneValueSet.class, name = "allOrNone")}</oldValue>-->
<!--                                    <newValue>{@com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.AllOrNoneValueSet.class, name = "allOrNone"), @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.EquatableValueSet.class, name = "equatable"), @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = io.trino.spi.predicate.SortedRangeSet.class, name = "sortable")}</newValue>-->
<!--                                    <justification>cleanup</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.method.removed</code>-->
<!--                                    <old>method long io.trino.spi.protocol.SpoolingContext::rowCount()</old>-->
<!--                                    <justification>Align better when naming in other places</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>interface io.trino.spi.protocol.SpooledLocation</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>interface io.trino.spi.protocol.SpooledSegmentHandle</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>class io.trino.spi.protocol.SpoolingContext</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>interface io.trino.spi.protocol.SpoolingManager</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>interface io.trino.spi.protocol.SpoolingManagerContext</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                                <item>-->
<!--                                    <ignore>true</ignore>-->
<!--                                    <code>java.class.removed</code>-->
<!--                                    <old>interface io.trino.spi.protocol.SpoolingManagerFactory</old>-->
<!--                                    <justification>Spooling SPI marked as experimental</justification>-->
<!--                                </item>-->
<!--                            </differences>-->
<!--                        </revapi.differences>-->
<!--                    </analysisConfiguration>-->
<!--                </configuration>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.revapi</groupId>-->
<!--                        <artifactId>revapi-java</artifactId>-->
<!--                        <version>0.28.1</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>
